title: Accessing a Kafka cluster using Skupper
subtitle: |-
  Use public cloud resources to process data from a private Kafka cluster
overview: |-
  This example is a simple Kafka application that shows how you can
  use Skupper to access a Kafka cluster at a remote site without
  exposing it to the public internet.

  It contains two services:

  * A Kafka cluster named "cluster1" running in a private data center.
    The cluster has a topic named "topic1".

  * A Kafka client running in the public cloud.  It sends 10 messages
    to "topic1" and then receives them back.

  The example uses two Kubernetes namespaces, "private" and "public",
  to represent the private data center and public cloud.
prerequisites: !string prerequisites
contexts:
  public:
    kubeconfig: ~/.kube/config-public
    namespace: public
  private:
    kubeconfig: ~/.kube/config-private
    namespace: private
steps:
  - title: Configure separate console sessions
    preamble: !string configure_separate_console_sessions_preamble
    commands:
      public:
        - run: export KUBECONFIG=~/.kube/config-public
      private:
        - run: export KUBECONFIG=~/.kube/config-private
  - title: Log in to your clusters
    preamble: !string log_in_to_your_clusters_preamble
  - title: Set the current namespaces
    preamble: !string set_the_current_namespaces_preamble
    commands:
      public:
        - run: kubectl create namespace public
        - run: kubectl config set-context --current --namespace public
      private:
        - run: kubectl create namespace private
        - run: kubectl config set-context --current --namespace private
  - title: Install Skupper in your namespaces
    preamble: !string install_skupper_in_your_namespaces_preamble
    commands:
      public:
        - run: skupper init
          await: [deployment/skupper-service-controller, deployment/skupper-router]
      private:
        - run: skupper init --ingress none
          await: [deployment/skupper-service-controller, deployment/skupper-router]
  - title: Link your namespaces
    preamble: !string link_your_namespaces_preamble
    commands:
      public:
        - run: skupper token create ~/public.token
      private:
        - run: skupper link create ~/public.token
        - run: skupper link status --wait 30
  - title: Deploy the Kafka cluster
    commands:
      private:
        - run: kubectl create -f strimzi.yaml
        - run: kubectl apply -f cluster1.yaml
        - run: kubectl wait --for condition=ready --timeout 360s kafka/cluster1
        - run: kubectl apply -f topic1.yaml
          sleep: 10
        # - run: kubectl wait --for condition=ready --timeout 180s kafka/topic1
  - title: Expose the Kafka cluster
    commands:
      private:
        - run: skupper expose statefulset/cluster1-kafka --headless --port 9092
      public:
        - run: kubectl get services
          await: [service/cluster1-kafka-brokers]
  - title: Run the client
    commands:
      public:
        - run: kubectl run client --attach --rm --restart Never --image quay.io/skupper/kafka-example-client --env BOOTSTRAP_SERVERS=cluster1-kafka-brokers:9092

# kubectl delete namespace/public namespace/private && kubectl delete -f strimzi.yaml
