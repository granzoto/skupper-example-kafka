title: Skupper Hello World
subtitle: A minimal HTTP application deployed across Kubernetes clusters using Skupper
github_actions_url: https://github.com/skupperproject/skewer/actions/workflows/main.yaml
overview: |-
  This example is a very simple multi-service HTTP application that can
  be deployed across multiple Kubernetes clusters using Skupper.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hello from <pod-name>
    (<request-count>)`.

  * A frontend service that accepts HTTP requests, calls the backend
    to fetch new greetings, and serves them to the user.

  With Skupper, you can place the backend in one cluster and the
  frontend in another and maintain connectivity between the two
  services without exposing the backend to the public internet.

  <img src="images/entities.svg" width="640"/>
prerequisites: |-
  * The `kubectl` command-line tool, version 1.15 or later
    ([installation guide][install-kubectl])

  * The `skupper` command-line tool, the latest version ([installation
    guide][install-skupper])

  * Access to two Kubernetes namespaces, from any providers you
    choose, on any clusters you choose

  [install-kubectl]: https://kubernetes.io/docs/tasks/tools/install-kubectl/
  [install-skupper]: https://skupper.io/start/index.html#step-1-install-the-skupper-command-line-tool-in-your-environment
contexts:
  west:
    kubeconfig: ~/.kube/config-west
    namespace: west
  east:
    kubeconfig: ~/.kube/config-east
    namespace: east
steps:
  - title: Configure separate console sessions
    preamble: !string configure_separate_console_sessions_preamble
    commands:
      west:
        - run: export KUBECONFIG=~/.kube/config-west
      east:
        - run: export KUBECONFIG=~/.kube/config-east
  - title: Log in to your clusters
    preamble: !string log_in_to_your_clusters_preamble
  - title: Set up your namespaces
    preamble: !string set_up_your_namespaces_preamble
    commands:
      west:
        - run: kubectl create namespace west
        - run: kubectl config set-context --current --namespace west
      east:
        - run: kubectl create namespace east
        - run: kubectl config set-context --current --namespace east
  - title: Install Skupper in your namespaces
    preamble: !string install_skupper_in_your_namespaces_preamble
    commands:
      west:
        - run: skupper init
          await: [deployment/skupper-service-controller, deployment/skupper-router]
      east:
        - run: skupper init --ingress none
          await: [deployment/skupper-service-controller, deployment/skupper-router]
  - title: Link your namespaces
    preamble: !string link_your_namespaces_preamble
    commands:
      west:
        - run: skupper token create ~/west.token
      east:
        - run: skupper link create ~/west.token
        - run: skupper link status --wait 30
  - title: Deploy your services
    commands:
      west:
        - run: kubectl create deployment hello-world-frontend --image quay.io/skupper/hello-world-frontend
          await: [deployment/hello-world-frontend]
      east:
        - run: kubectl create deployment hello-world-backend --image quay.io/skupper/hello-world-backend
          await: [deployment/hello-world-backend]
  - title: Expose your services
    commands:
      west:
        - run: kubectl expose deployment/hello-world-frontend --port 8080 --type LoadBalancer
          sleep: 30
      east:
        - run: skupper expose deployment/hello-world-backend --port 8080
          sleep: 30
  - title: Test your application
    commands:
      west:
        - run: "curl $(kubectl get service hello-world-frontend -o jsonpath='http://{.status.loadBalancer.ingress[0].ip}:8080/')"
summary: |-
  This example locates the frontend and backend services in different
  namespaces, on different clusters.  Ordinarily, this means that they
  have no way to communicate unless they are exposed to the public
  internet.

  Introducing Skupper into each namespace allows us to create a virtual
  application network that can connect services in different clusters.
  Any service exposed on the application network is represented as a
  local service in all of the linked namespaces.

  The backend service is located in `east`, but the frontend service
  in `west` can "see" it as if it were local.  When the frontend
  sends a request to the backend, Skupper forwards the request to the
  namespace where the backend is running and routes the response back to
  the frontend.

  <img src="images/sequence.svg" width="640"/>
cleaning_up:
  preamble: !string cleaning_up_preamble
  commands:
    west:
      - run: skupper delete
      - run: kubectl delete service/hello-world-frontend
      - run: kubectl delete deployment/hello-world-frontend
    east:
      - run: skupper delete
      - run: kubectl delete deployment/hello-world-backend
next_steps: !string next_steps
